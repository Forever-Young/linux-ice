>From bd11ea681ec682d56dc49f2898a5dd210964183f Mon Sep 17 00:00:00 2001
From: Oleksandr Natalenko <oleksandr@natalenko.name>
Date: Tue, 21 Jan 2014 00:34:57 +0200
Subject: [PATCH] toi-3.13: mm: fix shmem functions calls
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This commit tries to fix shmem_file_setup() calls due to API
changes in 3.13 kernel:

===
 struct file *shmem_kernel_file_setup(const char *name, loff_t size, unsigned long flags, atomic_copy)
                                                                                          ^
mm/shmem.c:3001:83: error: unknown type name ‘atomic_copy’
 struct file *shmem_file_setup(const char *name, loff_t size, unsigned long flags, atomic_copy)
                                                                                   ^
mm/shmem.c: In function ‘shmem_zero_setup’:
mm/shmem.c:3016:2: error: too many arguments to function ‘shmem_file_setup’
  file = shmem_file_setup("dev/zero", size, vma->vm_flags, 0, 0);
  ^
In file included from include/linux/linkage.h:6:0,
                 from include/linux/fs.h:5,
                 from mm/shmem.c:24:
mm/shmem.c:3005:19: note: declared here
 EXPORT_SYMBOL_GPL(shmem_file_setup);
                   ^
include/linux/export.h:57:21: note: in definition of macro ‘__EXPORT_SYMBOL’
  extern typeof(sym) sym;     \
                     ^
mm/shmem.c:3005:1: note: in expansion of macro ‘EXPORT_SYMBOL_GPL’
 EXPORT_SYMBOL_GPL(shmem_file_setup);
 ^
mm/shmem.c: At top level:
mm/shmem.c:2923:21: warning: ‘__shmem_file_setup’ defined but not used [-Wunused-function]
 static struct file *__shmem_file_setup(const char *name, loff_t size,
                     ^
  AS      arch/x86/kernel/vsyscall_emu_64.o
  AS [M]  arch/x86/crypto/twofish-x86_64-asm_64.o
scripts/Makefile.build:308: recipe for target 'mm/shmem.o' failed
make[1]: *** [mm/shmem.o] Error 1
Makefile:816: recipe for target 'mm' failed
make: *** [mm] Error 2
make: *** Waiting for unfinished jobs....
===
---
 mm/shmem.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/mm/shmem.c b/mm/shmem.c
index 48f703f..b4ba18f 100644
--- a/mm/shmem.c
+++ b/mm/shmem.c
@@ -2987,9 +2987,9 @@ put_memory:
  * @size: size to be set for the file
  * @flags: VM_NORESERVE suppresses pre-accounting of the entire object size
  */
-struct file *shmem_kernel_file_setup(const char *name, loff_t size, unsigned long flags, atomic_copy)
+struct file *shmem_kernel_file_setup(const char *name, loff_t size, unsigned long flags)
 {
-	return __shmem_file_setup(name, size, flags, S_PRIVATE, atomic_copy);
+	return __shmem_file_setup(name, size, flags, S_PRIVATE, 0);
 }
 
 /**
@@ -2998,7 +2998,7 @@ struct file *shmem_kernel_file_setup(const char *name, loff_t size, unsigned lon
  * @size: size to be set for the file
  * @flags: VM_NORESERVE suppresses pre-accounting of the entire object size
  */
-struct file *shmem_file_setup(const char *name, loff_t size, unsigned long flags, atomic_copy)
+struct file *shmem_file_setup(const char *name, loff_t size, unsigned long flags, int atomic_copy)
 {
 	return __shmem_file_setup(name, size, flags, 0, atomic_copy);
 }
@@ -3013,7 +3013,7 @@ int shmem_zero_setup(struct vm_area_struct *vma)
 	struct file *file;
 	loff_t size = vma->vm_end - vma->vm_start;
 
-	file = shmem_file_setup("dev/zero", size, vma->vm_flags, 0, 0);
+	file = shmem_file_setup("dev/zero", size, vma->vm_flags, 0);
 	if (IS_ERR(file))
 		return PTR_ERR(file);
 
-- 
1.8.5.3

